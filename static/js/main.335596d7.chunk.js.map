{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","value","movies","isLoading","searched","nominations","banner3Css","color","backgroundColor","fontSize","handleChange","bind","handleSubmit","handleNomination","handleRemoveNomination","noms","localStorage","getItem","this","setState","JSON","parse","movie","window","setItem","stringify","filter","mov","event","Object","assign","target","preventDefault","axios","get","then","res","data","Search","catch","e","console","error","className","type","placeholder","onChange","onClick","class","length","map","Title","Year","disabled","includes","title","css","visibleTime","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.335596d7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\nimport Banner from 'react-js-banner';\nimport \"./App.css\";\n/**API key for accessing omdbapi */\nconst API_KEY  = \"5380268b\";\n\nexport class App extends Component {\n \n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      movies: [],\n      isLoading: false,\n      searched: false,\n      nominations: [],\n      banner3Css: { color: \"#FFF\", backgroundColor: \"red\", fontSize: 20 }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNomination = this.handleNomination.bind(this);\n    this.handleRemoveNomination = this.handleRemoveNomination.bind(this);\n  }\n\n  /**\n   * life cycle method to access local storage if there were nominated movies.\n   */\n  componentDidMount() {\n    const noms= localStorage.getItem('nominations');\n    if (noms) {\n      this.setState({\n        nominations: JSON.parse(noms)\n      });\n    } else {\n      this.setState({\n        nominations: []\n      });\n    }\n    \n  }\n  /**\n   * function to handle nomination of a movie from list of searched movies.\n   * Saves data to local storage upon nomination\n   * @param {*} movie \n   */\n  handleNomination(movie) {\n    this.setState({\n      nominations: [...this.state.nominations, movie]\n    }, () => {\n      window.localStorage.setItem('nominations', JSON.stringify(this.state.nominations));\n    });\n  }\n  /**\n   * function to handle removal of a nominated movie from list.\n   * Saves changed data to local storage upon removal\n   * @param {*} movie \n   */\n  handleRemoveNomination(movie) {\n    this.setState({nominations: this.state.nominations.filter(function(mov) { \n      return mov !== movie;\n    })}, () => {\n      window.localStorage.setItem('nominations', JSON.stringify(this.state.nominations));\n    });\n  }\n\n  /**\n   * function to handle user input change\n   * @param {*} event \n   */\n  handleChange(event) {\n    this.setState(\n      Object.assign({}, this.state, {value: event.target.value})\n    );\n  }\n\n  /**\n   * function to handle input search. makes an api call to omdbapi.\n   * @param {*} event \n   */\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState(\n      Object.assign({}, this.state, {isLoading: true, movies: [], searched: true})\n    );\n\n    axios\n        .get(\n          `https://www.omdbapi.com/?s=${this.state.value}&page=${2}&type=movie&apikey=${API_KEY}`)\n        .then(res => {\n          \n          return res.data;\n        })\n        .then(res => {\n          if (!res.Search) {\n            this.setState({ movies: [] });\n            return;\n          }\n        \n          this.setState({\n            movies: [...this.state.movies, res.Search]\n          });\n        })\n        .catch(e => console.error(e)\n        );\n        \n  }\n\n  /**\n   * function to render jsx\n   * \n   */\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"titles\">\n          <div className=\"container\">\n            <h1 className=\"title\">Movie finder</h1>\n            <h2 className=\"subtitle\">Find your next favourite movie :)</h2>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"searchbox\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Search movies\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n            <button\n              className=\"button is-info\"\n              onClick={this.handleSubmit}\n            >\n              <i class=\"fa fa-search\"></i>\n            </button>\n            \n          </div>\n          <div className=\"content\">\n            <div className=\"search-results\">\n            {this.state.movies.length > 0 ? (\n              <h3 className=\"title\">Search result for \"{this.state.value}\"</h3>) : \"\"\n            }\n              <ul>\n                {this.state.movies.length > 0 ? (\n                    this.state.movies[0].map(movie => \n              \n                      <div className=\"field has-addons\">\n                        \n                        <div className=\"control\">\n                          <li key={movie}>{movie.Title}({movie.Year})<br/></li>\n                        </div>\n                        <div className=\"control\">\n                          <button\n                            className=\"button is-info\"\n                            onClick={() => this.handleNomination(movie)}\n                            disabled={this.state.nominations.includes(movie)}\n                          >\n                            Nominate\n                          </button>\n                        </div>\n                      </div>\n                    )\n                  ) : (\n                    <p className=\"p\">\n                      Couldn't find any movie. Please search again using\n                      another search criteria.\n                    </p>\n                  )\n                }\n              </ul>\n            </div>\n            <div className=\"nominations\">\n              <h3 className=\"title\">Your Nominations</h3>\n              {\n                  this.state.nominations.length >= 5 ? (\n                    <Banner \n                      title=\"You reached 5 nominations.\" \n                      css={this.state.banner3Css} \n                      visibleTime={3000}\n                    />\n                  ) : null\n                }\n              <ul>\n                {this.state.nominations.length > 0 ? (\n                    this.state.nominations.map(movie => \n              \n                      <div className=\"field has-addons\">\n                        <div className=\"control\">\n                          <li key={movie}>{movie.Title}({movie.Year})<br/></li>\n                        </div>\n                        <div className=\"control\">\n                          <button\n                            className=\"button is-info\"\n                            onClick={() => this.handleRemoveNomination(movie)}\n                          >\n                            Remove\n                          </button>\n                        </div>\n                      </div>\n                    )\n                  ) : (\n                    <p>\n                      Please nominate a movie to see a list of your nominations.\n                    </p>\n                  )\n                }\n              </ul>                \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}